{"version":3,"sources":["pages/Home.js","components/PlayerAvatar.js","store/questons.js","pages/Game.js","App.js","serviceWorker.js","store/appStore.js","index.js"],"names":["Home","inject","observer","state","username","gameCode","showJoin","showCreate","invalid","copied","error","code","validator","SimpleReactValidator","uniqueGameId","n","Math","floor","random","setState","joinGame","addUserName","event","target","value","addGameCode","letsPlay","name","props","appStore","addCred","console","log","this","purgeFields","letsPlayButton","Button","className","variant","onClick","preventDefault","to","genCard","style","marginTop","fontSize","color","display","flexDirection","alignContent","justifyContent","marginBottom","id","marginRight","text","onCopy","joinCard","FormControl","placeholder","aria-label","onChange","onBlur","showMessageFor","message","paddingLeft","Component","Player","sips","question","dirty","tipsy","embarrassing","Game","gamecode","you","players","drunk","questions","category","currentQue","seconds","Date","sender","time","received","store","endpoint","socket","io","drinks","num","emit","next","d","getRandomInt","length","cat","ar","room","queryString","parse","window","location","search","exit","sendtoall","Object","keys","on","que","data","arr","users","map","el","index","player","find","user","min","max","ceil","key","format","ticking","timezone","date","output","split","Container","Row","Col","sm","App","exact","path","Boolean","hostname","match","observable","action","Root","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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DACA,2DACA,0CACA,mCACA,wDACA,2CACA,uDACA,2EACA,8CACA,iDACA,4EACA,qDACA,mDACA,uCACA,gDACA,wDACA,uDACA,qCACA,4CACA,kEACA,wCACA,+CACA,wCACA,qDACA,uDACA,8CACA,qDACA,uDACA,wCACA,kCACA,iDACA,+CACA,qCACA,0CACA,0CACA,6CACA,oEACA,mDACA,6CACA,+CACA,2DACA,gDACA,gDACA,gEACA,4CACA,qCACA,iDACA,wCACA,wDACA,2CACA,qCACA,qCACA,mDACA,2DAEJC,MAAO,CACH,gDACA,sCACA,6CACA,8CACA,iDACA,qCACA,kCACA,0DACA,0DACA,+DACA,8CACA,+DACA,2DACA,2CACA,sEACA,4CACA,gDACA,wCACA,sCACA,qCACA,0CACA,mCACA,yCACA,6DACA,uDACA,gDACA,6CACA,sCACA,4CACA,4CACA,uCACA,iEACA,mFACA,2DACA,8CACA,uDACA,2DACA,oCACA,gDACA,mDACA,uCACA,sCACA,0CACA,sCACA,6DAEJC,aAAc,CACV,wDACA,0CACA,uDACA,gEACA,0DACA,+DACA,qDACA,+EACA,uCACA,iDACA,kDACA,kEACA,uCACA,8DACA,sDACA,+CACA,iFACA,kDACA,gFACA,8CACA,sDACA,kEACA,2EACA,wDACA,uDACA,qEACA,iEACA,iDACA,uDACA,gEACA,+CACA,gDACA,+CACA,2FACA,6DACA,kCACA,+CACA,+DACA,2GACA,kGACA,+FACA,+EACA,iFACA,sDACA,0E,iBCuIOC,EArRdvE,YAAO,W,GACPC,Y,8MAEGC,MAAQ,CACJsE,SAAU,GACVC,IAAK,GACLC,QAAS,GACTR,KAAM,EACNS,OAAO,EACPC,UAAWA,EACXC,SAAU,GACVC,WAAY,GACZC,QAAS,IAAIC,KACblB,QAAS,GACTmB,OAAQ,GACRC,KAAM,GACNC,SAAU,I,EAEdC,MAAQ,EAAKzD,MAAMC,S,EACnByD,SAAW,6C,EACXC,OAASC,IAAG,EAAKF,U,EA6CjBG,OAAS,SAACC,GACNA,GAAY,EACZ,EAAKvE,SAAS,CAAEgD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","file":"static/js/main.449d97e3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FaGlassCheers } from 'react-icons/fa';\r\n// import { BiError } from 'react-icons/bi';\r\nimport { Button, FormControl } from 'react-bootstrap';\r\n// import { Link } from 'react-router-dom';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n@inject('appStore')\r\n@observer\r\nclass Home extends Component {\r\n    state = {\r\n        username: '',\r\n        gameCode: '',\r\n        showJoin: false,\r\n        showCreate: false,\r\n        invalid: true,\r\n        copied: false,\r\n        error: {\r\n            username: false,\r\n            code: false,\r\n        },\r\n    };\r\n\r\n    validator = new SimpleReactValidator();\r\n\r\n    uniqueGameId = () => {\r\n        let n = Math.floor(100000 + Math.random() * 900000);\r\n        this.setState({\r\n            gameCode: n,\r\n            showJoin: false,\r\n            copied: false,\r\n            showCreate: true,\r\n        });\r\n    };\r\n    joinGame = () => {\r\n        this.setState({ gameCode: '', showJoin: true, showCreate: false });\r\n    };\r\n\r\n    addUserName = (event) => {\r\n        this.setState({\r\n            username: event.target.value,\r\n        });\r\n    };\r\n    addGameCode = (event) => {\r\n        this.setState({\r\n            gameCode: event.target.value,\r\n        });\r\n    };\r\n\r\n    letsPlay = (name, code) => {\r\n        this.props.appStore.addCred(name, code);\r\n        console.log(this.props.appStore);\r\n    };\r\n\r\n    render() {\r\n        this.validator.purgeFields();\r\n\r\n        let letsPlayButton = (\r\n            <Button\r\n                className=\"btn\"\r\n                variant=\"outline-success\"\r\n                onClick={(event) => {\r\n                    if (!this.state.username || !this.state.gameCode) {\r\n                        event.preventDefault();\r\n                    }\r\n\r\n                    this.letsPlay(this.state.username, this.state.gameCode);\r\n                }}\r\n            >\r\n                <Link\r\n                    to={`/game?&name=${this.state.username}&room=${this.state.gameCode}`}\r\n                >\r\n                    Let's Play\r\n                </Link>\r\n            </Button>\r\n        );\r\n\r\n        console.log(this.state.username, this.state.gameCode);\r\n        let genCard = (\r\n            <div\r\n                style={{\r\n                    marginTop: '25px',\r\n                }}\r\n            >\r\n                <p\r\n                    style={{\r\n                        fontSize: '90%',\r\n                        color: '#777',\r\n                    }}\r\n                >\r\n                    A game is created with game code : {this.state.gameCode}{' '}\r\n                    <br />\r\n                    You can share this code with your friends\r\n                </p>\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignContent: 'center',\r\n                        justifyContent: 'center',\r\n                        marginBottom: '25px',\r\n                    }}\r\n                >\r\n                    <h3 id=\"game-id\" style={{ marginRight: '10px' }}>\r\n                        {this.state.gameCode} {'  '}\r\n                    </h3>\r\n                    <CopyToClipboard\r\n                        text={this.state.gameCode}\r\n                        onCopy={() => this.setState({ copied: true })}\r\n                    >\r\n                        <Button variant=\"outline-success\">\r\n                            Copy to Clipboard\r\n                        </Button>\r\n                    </CopyToClipboard>\r\n                </div>\r\n                {letsPlayButton}\r\n            </div>\r\n        );\r\n\r\n        let joinCard = (\r\n            <div\r\n                style={{\r\n                    marginTop: '25px',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}\r\n            >\r\n                <p\r\n                    style={{\r\n                        color: '#777',\r\n                        marginBottom: '10px',\r\n                    }}\r\n                >\r\n                    Please Enter the Joining Code:{' '}\r\n                </p>\r\n                <div className=\"input-with-error\">\r\n                    <FormControl\r\n                        className=\"input-field\"\r\n                        placeholder=\"Enter 6 Digit Game Code\"\r\n                        aria-label=\"gameCode\"\r\n                        onChange={this.addGameCode}\r\n                        onBlur={() => this.validator.showMessageFor('code')}\r\n                    />\r\n                    {this.validator.message('code', this.state.gameCode, [\r\n                        'required',\r\n                        'numeric',\r\n                        'min:100000,num',\r\n                        'max:999999,num',\r\n                    ])}\r\n                </div>\r\n                <div>{letsPlayButton}</div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Wrapper\">\r\n                <div className=\"welcome-screen\">\r\n                    <div className=\"heading\">\r\n                        <h1>\r\n                            Never I Have Ever\r\n                            <span style={{ paddingLeft: '20px' }}>\r\n                                <FaGlassCheers />\r\n                            </span>\r\n                        </h1>\r\n                    </div>\r\n\r\n                    <div className=\"content\">\r\n                        <div className=\"input-with-error\">\r\n                            <div className=\"input-name\">\r\n                                <FormControl\r\n                                    className=\"input-field\"\r\n                                    placeholder=\"Enter Username\"\r\n                                    aria-label=\"username\"\r\n                                    onChange={this.addUserName}\r\n                                    onBlur={() =>\r\n                                        this.validator.showMessageFor('name')\r\n                                    }\r\n                                />{' '}\r\n                            </div>\r\n                            {this.validator.message(\r\n                                'name',\r\n                                this.state.username,\r\n                                'required|alpha_num_dash_space'\r\n                            )}\r\n                        </div>\r\n                        <div className=\"homeButtons\">\r\n                            <Button\r\n                                className=\"btn\"\r\n                                variant=\"outline-success\"\r\n                                onClick={this.uniqueGameId}\r\n                            >\r\n                                Create\r\n                            </Button>\r\n                            <Button\r\n                                className=\"btn\"\r\n                                variant=\"outline-success\"\r\n                                onClick={this.joinGame}\r\n                            >\r\n                                Join\r\n                            </Button>{' '}\r\n                        </div>\r\n                        {this.state.showCreate ? genCard : null}\r\n                        {this.state.showJoin ? joinCard : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Player = (props) => {\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"player-details\">\r\n                <div>{props.name} </div>\r\n                <div>\r\n                    <span>Score </span>\r\n                    <span>{props.sips}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n","const question = {\r\n    dirty: [\r\n        'Never have I ever kiss and told.',\r\n        'Never have I ever been on a blind date.',\r\n        'Never have I ever had a date with someone I met on an app.',\r\n        'Never have I ever made out with a stranger.',\r\n        'Never have I ever tried a cheesy pick-up line on someone.',\r\n        'Never have I ever had a cheesy pick-up line work on me.',\r\n        'Never have I ever sent someone a sexy selfie.',\r\n        'Never have I ever been on a double date with my parents.',\r\n        'Never have I ever tried skinny dipping.',\r\n        'Never have I ever gone commando.',\r\n        'Never have I ever made out with someone in a hot tub.',\r\n        'Never have I ever had a one night stand.',\r\n        \"Never have I ever had a crush on a friend's sibling.\",\r\n        'Never have I ever flirted with someone more than 10 years older than me.',\r\n        'Never have I ever been to a drive-in movie.',\r\n        'Never have I ever been a friend with benefits.',\r\n        'Never have I ever skipped a movie to make out in the parking lot instead.',\r\n        'Never have I ever been playful with whipped cream.',\r\n        'Never have I ever winked or whistled at someone.',\r\n        'Never have I ever slept in the buff.',\r\n        'Never have I ever looked at naughty pictures.',\r\n        'Never have I ever dated more than one person at once.',\r\n        'Never have I ever seen someone else naked in person.',\r\n        'Never have I ever bought lingerie.',\r\n        'Never have I ever been to an adult store.',\r\n        'Never have I ever watched a movie because I knew it had nudity.',\r\n        'Never have I ever played strip poker.',\r\n        'Never have I ever done it in a public place.',\r\n        'Never have I ever passed second base.',\r\n        'Never have I ever peeked at someone in the shower.',\r\n        'Never have I ever had a dream about someone I liked.',\r\n        'Never have I ever had a crush on a teacher.',\r\n        'Never have I ever slipped someone my phone number.',\r\n        \"Never have I ever gently whispered in someone's ear.\",\r\n        'Never have I ever played hard to get.',\r\n        'Never have I ever had a hickey.',\r\n        'Never have I ever given someone else a hickey.',\r\n        'Never have I ever stayed friends with an ex.',\r\n        'Never have I ever done it outside.',\r\n        'Never have I ever had a bedroom injury.',\r\n        'Never have I ever had breakfast in bed.',\r\n        'Never have I ever had a full-body massage.',\r\n        \"Never have I ever adjusted my buttons based on who's in the room.\",\r\n        'Never have I ever fantasized about someone else.',\r\n        'Never have I ever made any naughty videos.',\r\n        'Never have I ever had sex in a public place.',\r\n        'Never have I ever sent a dirty text to the wrong person.',\r\n        'Never have I ever said the wrong name in bed.',\r\n        'Never have I ever had a friend with benefits.',\r\n        \"Never have I ever slept with someone whose name I don't know.\",\r\n        'Never have I ever been to an adult store.',\r\n        'Never have I ever had a threesome.',\r\n        \"Never have I ever joined the 'mile high' club.\",\r\n        'Never have I ever sent a sexy selfie.',\r\n        'Never have I ever had sex in the sea/a swimming pool.',\r\n        'Never have I ever had a one night stand.',\r\n        'Never have I ever faked an orgasm.',\r\n        'Never have I ever flashed someone.',\r\n        'Never have I ever given or received a lap dance.',\r\n        \"Never have I ever been 'walked in on' while having sex.\",\r\n    ],\r\n    tipsy: [\r\n        'Never have I ever been drunk at a restaurant.',\r\n        'Never have I ever played beer pong.',\r\n        'Never have I ever tried to do a keg stand.',\r\n        'Never have I ever drank before I turned 21.',\r\n        'Never have I ever partied during spring break.',\r\n        'Never have I ever tried Champagne.',\r\n        'Never have I ever said a toast.',\r\n        'Never have I ever drank more than 3 beers in a sitting.',\r\n        'Never have I ever drank alcohol in front of my parents.',\r\n        'Never have I ever fallen asleep and woken up somewhere else.',\r\n        'Never have I ever danced on a table or bar.',\r\n        'Never have I ever pretended to like a wine to look classier.',\r\n        'Never have I ever drank liquor straight from the bottle.',\r\n        'Never have I ever received a free drink.',\r\n        \"Never have I ever texted someone I didn't mean to when I was tipsy.\",\r\n        'Never have I ever left a drunk voicemail.',\r\n        'Never have I ever been the designated driver.',\r\n        'Never have I ever tried a craft beer.',\r\n        'Never have I ever toured a brewery.',\r\n        'Never have I ever tried moonshine.',\r\n        'Never have I ever watched the Hangover.',\r\n        'Never have I ever been hungover.',\r\n        'Never have I ever tried wine in a box.',\r\n        'Never have I ever purchased alcohol duty-free on a cruise.',\r\n        'Never have I ever broke up with someone while drunk.',\r\n        'Never have I ever found a cure for hangovers.',\r\n        'Never have I ever made up my own cocktail.',\r\n        'Never have I ever had a jello shot.',\r\n        'Never have I ever made vodka gummy bears.',\r\n        'Never have I ever been to a wine tasting.',\r\n        'Never have I ever drank Crown Royal.',\r\n        'Never have I ever made an impulse purchase online while drunk.',\r\n        \"Never have I ever drunkenly posted something on Facebook that I wished I hadn't.\",\r\n        'Never have I ever lost count of how many drinks I drank.',\r\n        'Never have I ever had to be carried to bed.',\r\n        \"Never have I ever played 'Never have I ever' before.\",\r\n        'Never have I ever been the drunkest person at the party.',\r\n        'Never have I ever drank at a bar.',\r\n        'Never have I ever taken a shot with no hands.',\r\n        'Never have I ever had a stranger buy me a drink.',\r\n        'Never have I ever shotgunned a beer.',\r\n        'Never have I ever done a pub-crawl.',\r\n        'Never have I ever drank a flaming shot.',\r\n        'Never have I ever done a body shot.',\r\n        'Never have I ever participated in a drinking competition.',\r\n    ],\r\n    embarrassing: [\r\n        'Never have I ever farted in front of someone I liked.',\r\n        'Never have I ever accidentally sharted.',\r\n        'Never have I ever forgotten the punchline of a joke.',\r\n        'Never have I ever sang a song out loud and messed the lyrics.',\r\n        'Never have I ever walked in on someone in the bathroom.',\r\n        'Never have I ever had someone walk in on me in the bathroom.',\r\n        'Never have I ever sent a text to the wrong person.',\r\n        'Never have I ever tried to pass a silent fart, but it came out loud instead.',\r\n        'Never have I ever tripped in public.',\r\n        'Never have I ever wet the bed after childhood.',\r\n        'Never have I ever accidentally pooped my pants.',\r\n        'Never have I ever attempted martial arts moves while by myself.',\r\n        'Never have I ever drove over a curb.',\r\n        'Never have I ever mistaken a man for a women or vice versa.',\r\n        'Never have I ever laughed so hard, I peed my pants.',\r\n        'Never have I ever picked a wedgie in public.',\r\n        'Never have I ever called the wrong person, but pretended I meant to call them.',\r\n        'Never have I ever gone into the wrong restroom.',\r\n        'Never have I ever been so freaked to be outside at night, that I ran back in.',\r\n        'Never have I ever lost my swimwear bottoms.',\r\n        \"Never have I ever had diarrhea at a friend's house.\",\r\n        'Never have I ever broken a piece of furniture by sitting on it.',\r\n        'Never have I ever arrived somewhere late and had everyone staring at me.',\r\n        'Never have I ever had food stuck in my teeth all day.',\r\n        'Never have I ever walked around with my zipper down.',\r\n        \"Never have I ever bought a children's toy for myself, as an adult.\",\r\n        'Never have I ever recorded video of myself singing or dancing.',\r\n        'Never have I ever been caught picking my nose.',\r\n        'Never have I ever gotten something stuck in my nose.',\r\n        'Never have I ever greeted someone I thought was someone else.',\r\n        'Never have I ever gave myself a bad haircut.',\r\n        'Never have I ever been told I had bad breath.',\r\n        'Never have I ever screamed because of a bug.',\r\n        \"Never have I ever played on my phone, trying to look like I'm doing something important.\",\r\n        'Never have I ever practiced public speaking in the mirror.',\r\n        'Never have I ever had dandruff.',\r\n        'Never have I ever listened to Justin Bieber.',\r\n        'Never have I ever just looked at myself naked in the mirror.',\r\n        'Never have I ever pretended to wash my hands by turning the water on, just in case someone is listening.',\r\n        \"Never have I ever smiled at someone when I realize I wasn't listening to what they were saying.\",\r\n        'Never have I ever tried to impress a crush by seeming knowledgeable about things they liked.',\r\n        'Never have I ever refreshed over and over to see if I have any new messages.',\r\n        'Never have I ever pretended to text while you secretly take a million selfies.',\r\n        'Never have I ever been obsessed with One Direction.',\r\n        'Never have I ever imagined my life as a sitcom and who would play me.',\r\n    ],\r\n};\r\n\r\nexport default question;\r\n","import React, { Component } from 'react';\r\n// import { Button } from 'react-bootstrap';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Player from '../components/PlayerAvatar';\r\nimport { observer, inject } from 'mobx-react';\r\nimport io from 'socket.io-client';\r\nimport queryString from 'querystring';\r\nimport { Button, FormControl } from 'react-bootstrap';\r\n// import store from '../store/appStore';\r\nimport questions from './../store/questons';\r\nimport { Link } from 'react-router-dom';\r\nimport Clock from 'react-live-clock';\r\n\r\n@inject('appStore')\r\n@observer\r\nclass Game extends Component {\r\n    state = {\r\n        gamecode: '',\r\n        you: '',\r\n        players: '',\r\n        sips: 0,\r\n        drunk: false,\r\n        questions: questions,\r\n        category: '',\r\n        currentQue: '',\r\n        seconds: new Date(),\r\n        message: '',\r\n        sender: '',\r\n        time: '',\r\n        received: '',\r\n    };\r\n    store = this.props.appStore;\r\n    endpoint = 'https://blissful-hoover-013892.netlify.app';\r\n    socket = io(this.endpoint);\r\n    componentDidMount() {\r\n        const { name, room } = queryString.parse(window.location.search);\r\n        this.setState({\r\n            you: name,\r\n            gamecode: room,\r\n            category: Object.keys(this.state.questions),\r\n        });\r\n        console.log({ name, room });\r\n        this.socket.emit('join', { name, room }, () => {});\r\n        this.socket.on('newque', (que) => {\r\n            this.setState({ currentQue: que, drunk: false });\r\n        });\r\n        this.socket.on('roomData', (data) => {\r\n            let a = data.users;\r\n            let arr = a.map((el, index) => {\r\n                const { id, name, num } = el;\r\n\r\n                return { id: index, data: { id, name, num } };\r\n            });\r\n\r\n            this.setState({ players: arr });\r\n        });\r\n        this.socket.on('drink-update', (data) => {\r\n            let player = this.state.players.find((user) => {\r\n                if (user.data.id === data.id) {\r\n                    return user;\r\n                }\r\n            });\r\n            player.data.num = data.sips;\r\n            let arr = this.state.players;\r\n            arr[player.id] = player;\r\n\r\n            this.setState({ players: arr });\r\n            console.log(data);\r\n        });\r\n        this.socket.on('recent-message', (data) => {\r\n            this.setState({\r\n                sender: data.name,\r\n                time: data.time,\r\n                received: data.message,\r\n            });\r\n        });\r\n    }\r\n\r\n    drinks = (num) => {\r\n        num = num + 1;\r\n        this.setState({ sips: num, drunk: true });\r\n        // let you = this.state.you;\r\n        // let room = this.state.gamecode;\r\n        this.socket.emit('drink', num);\r\n    };\r\n\r\n    next = (d) => {\r\n        // console.log(d);\r\n        if (d[2] === '30' || d[2] === '00') {\r\n            let n = this.getRandomInt(0, this.state.category.length);\r\n            let cat = this.state.category[n];\r\n            console.log(cat);\r\n            // console.log(this.state.questions[cat]);\r\n            let ar = this.state.questions[cat];\r\n            let an = this.getRandomInt(0, ar.length);\r\n            // this.setState({ currentQue: ar[an] });\r\n            let question = ar[an];\r\n            // console.log(ar[an]);\r\n            let { room } = queryString.parse(window.location.search);\r\n            this.socket.emit('next-question', { question, room }, () => {});\r\n        }\r\n        // this.socket.emit('next-question', { question, room }, () => {});\r\n    };\r\n\r\n    getRandomInt(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n    }\r\n\r\n    exit = () => {\r\n        this.socket.emit('exit');\r\n        // this.socket.off();\r\n    };\r\n    sendtoall = () => {\r\n        let message = this.state.message;\r\n        if (message) {\r\n            this.socket.emit('send-to-all', message, () => {});\r\n        }\r\n        this.setState({ message: '' });\r\n    };\r\n\r\n    render() {\r\n        // console.log(this.state.currentQue);\r\n        let player = null;\r\n\r\n        if (this.state.players) {\r\n            player = this.state.players.map((el, index) => {\r\n                return (\r\n                    <Player\r\n                        key={index}\r\n                        name={el.data.name}\r\n                        sips={el.data.num}\r\n                    />\r\n                );\r\n            });\r\n        }\r\n\r\n        const { appStore } = this.props.appStore;\r\n        console.log('App Store', appStore);\r\n        return (\r\n            <div className=\"gamePage\">\r\n                <nav>\r\n                    <div>\r\n                        <h3>Never I Have Ever</h3>\r\n                    </div>\r\n\r\n                    <div className=\"play\">\r\n                        <h5>\r\n                            Clock :{' '}\r\n                            <Clock\r\n                                className=\"clock\"\r\n                                format={'HH:mm:ss'}\r\n                                ticking={true}\r\n                                timezone={'US/Pacific'}\r\n                                onChange={(date) => {\r\n                                    var d = date.output.split(':');\r\n                                    this.next(d);\r\n                                }}\r\n                            />\r\n                        </h5>\r\n                        <h5>Room Code : {this.state.gamecode}</h5>\r\n                        <h5>Username : {this.state.you}</h5>\r\n                    </div>\r\n                    <Button\r\n                        className=\"btn\"\r\n                        variant=\"outline-success\"\r\n                        onClick={this.exit}\r\n                    >\r\n                        <Link to={'/'}>Exit</Link>\r\n                    </Button>\r\n                </nav>\r\n                <section className=\"game-section\">\r\n                    <Container>\r\n                        <Row\r\n                            style={{\r\n                                marginTop: '20px',\r\n                            }}\r\n                        >\r\n                            <Col sm={4}>\r\n                                <div className=\"all-players\">\r\n                                    <h1>All Players</h1>\r\n                                    <div>\r\n                                        {this.state.players ? player : null}\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                            <Col sm={8}>\r\n                                <div className=\"your-status\">\r\n                                    {/* <h1>Room Code : {this.state.gamecode}</h1>\r\n                                    <h3>Username : {this.state.you}</h3> */}\r\n                                    <h3>Your Score {this.state.sips}</h3>\r\n\r\n                                    <div className=\"ques\">\r\n                                        <p>\r\n                                            A new question will be prompted\r\n                                            every 0th or 30th second\r\n                                        </p>\r\n                                        <div>\r\n                                            {!this.state.currentQue ? (\r\n                                                <Button\r\n                                                    className=\"btn\"\r\n                                                    variant=\"outline-success\"\r\n                                                    onClick={() =>\r\n                                                        this.next([0, 0, '00'])\r\n                                                    }\r\n                                                >\r\n                                                    Start the Game\r\n                                                </Button>\r\n                                            ) : null}\r\n                                            {this.state.currentQue}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"Card\">\r\n                                        <div>\r\n                                            <Button\r\n                                                className=\"btn\"\r\n                                                variant=\"outline-success\"\r\n                                                onClick={() => {\r\n                                                    if (!this.state.drunk)\r\n                                                        this.drinks(\r\n                                                            this.state.sips\r\n                                                        );\r\n                                                }}\r\n                                            >\r\n                                                Drink\r\n                                            </Button>\r\n                                            <Button\r\n                                                className=\"btn\"\r\n                                                variant=\"outline-success\"\r\n                                                onClick={() =>\r\n                                                    this.setState({\r\n                                                        drunk: true,\r\n                                                    })\r\n                                                }\r\n                                            >\r\n                                                Nope\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"msg-box\">\r\n                                        <FormControl\r\n                                            className=\"input-field\"\r\n                                            placeholder=\"Send message to all players\"\r\n                                            aria-label=\"message\"\r\n                                            value={this.state.message}\r\n                                            onChange={(event) => {\r\n                                                // console.log(event.target.value);\r\n                                                this.setState({\r\n                                                    message: event.target.value,\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                        <Button\r\n                                            className=\"btn\"\r\n                                            variant=\"outline-success\"\r\n                                            onClick={this.sendtoall}\r\n                                        >\r\n                                            Send to all\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className=\"comments\">\r\n                                        <h5>Recent Comment</h5>\r\n                                        {this.state.sender ? (\r\n                                            <div className=\"recent-msg\">\r\n                                                <div>\r\n                                                    <h5>{this.state.sender}</h5>\r\n                                                    <h6>{this.state.time}</h6>\r\n                                                </div>\r\n                                                <p>\r\n                                                    <h3>\r\n                                                        {this.state.received}\r\n                                                    </h3>\r\n                                                </p>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <p>No Recent Comment</p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './pages/Home';\nimport Game from './pages/Game';\n// import appStore from './store/appStore';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Home />\n                        </Route>\n                        <Route exact path=\"/game\">\n                            <Game />\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { observable, action } from 'mobx';\r\n// import questions from './questons';\r\nclass appStore {\r\n    @observable username = '';\r\n    @observable gamecode = '';\r\n    // @observable questions = questions;\r\n\r\n    @action addCred = (name, code) => {\r\n        this.username = name;\r\n        this.gamecode = code;\r\n    };\r\n}\r\nvar store = new appStore();\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'mobx-react';\nimport appStore from './store/appStore';\n\nconst Root = (\n    <Provider appStore={appStore}>\n        <App />\n    </Provider>\n);\n\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}